@using FitMate.Controllers;
@using FitMate.Infrastucture.Dtos.Goals;
@using FitMate.Presentation.Helpers;
@model GoalDto
@{
    var id = Model?.Id ?? Guid.Empty;
    var activity = Model?.Activity ?? "";

    var isWeightliftingGoal = Model is WeightliftingGoalDto;
    var isTimedGoal = Model is TimedGoalDto;

    var weightliftingGoal = Model as WeightliftingGoalDto;
    var timedGoal = Model as TimedGoalDto;

    var weight = weightliftingGoal?.Weight ?? 0;
    var reps = weightliftingGoal?.Reps ?? 0;

    var quantity = timedGoal?.Quantity ?? 0;
    var quantityUnit = timedGoal?.QuantityUnit ?? string.Empty;
    var timespan = timedGoal?.Time ?? new TimeSpan();
}

<form id="goalForm" method="post">
    <input type="hidden" name="Id" value="@id" required />

    <div class="form-group">
        <label class="font-weight-bold">Activity</label>
        <input type="text" name="Activity" class="form-control" value="@activity" required />
    </div>

    <div class="form-group">
        <label class="font-weight-bold">Type</label>
        <div class="form-group form-inline">
            <input type="radio" id="WeightliftingRadio" name="GoalInput.Type" value="Weightlifting" class="form-control form-check mr-1" oninput="typeRadio_Changed();"
            @(isWeightliftingGoal ? "checked" : "") />
            <label>Weightlifting</label>

            <input type="radio" id="TimedRadio" name="GoalInput.Type" value="Timed" class="form-control form-check mr-1 ml-3" oninput="typeRadio_Changed();"
            @(isTimedGoal ? "checked" : "") />
            <label>Timed</label>
        </div>
    </div>

    <div id="WeightliftingGroup" class="form-group">
        <div class="form-group">
            <label class="font-weight-bold">Weight</label>
            <input type="number" name="Weight" min="0" step="0.1" class="form-control" value="@weight" required />
        </div>
        <div class="form-group">
            <label class="font-weight-bold">Reps</label>
            <input type="number" name="Reps" min="0" step="1" class="form-control" value="@reps" required />
        </div>
    </div>

    <div id="TimedGroup" class="form-group d-none">
        <div class="form-group">
            <label class="font-weight-bold">Time</label>

            <div class="d-flex">
                <input type="number" min="0" max="24" step="1" Name="Hours" class="form-control flex-grow-1" placeholder="Hours" value="@timespan.Hours" required />
                <input type="number" min="0" max="60" step="1" Name="Minutes" class="form-control flex-grow-1" placeholder="Minutes" value="@timespan.Minutes" required />
                <input type="number" min="0" max="60" step="1" Name="Seconds" class="form-control flex-grow-1" placeholder="Seconds" value="@timespan.Seconds" required />
            </div>

        </div>
        <div class="form-group">
            <label class="font-weight-bold">Quantity</label>
            <div class="d-flex">
                <div class="flex-grow-1">
                    <input type="number" min="0" step="1" name="Quantity" placeholder="Quantity" class="form-control" value="@quantity" />
                </div>
                <div class="flex-grow-1">
                    <input type="text" name="QuantityUnit" placeholder="Unit" class="form-control" value="@quantityUnit" />
                </div>
            </div>
        </div>
    </div>

    <div class="form-group float-right">
        <a asp-controller="@(UiNamingHelper.GetControllerName<GoalController>())" asp-action="@nameof(GoalController.Summary)" class="btn btn-danger">Cancel</a>
        <input type="submit" class="btn btn-primary" value="Save" />
    </div>
</form>